# Generated by Django 2.2.4 on 2023-08-23 02:17

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('datasets', '0111_auto_20230630_1428'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='hpdcomplaint',
            name='boroughid',
        ),
        migrations.RemoveField(
            model_name='hpdcomplaint',
            name='buildingid',
        ),
        migrations.RemoveField(
            model_name='hpdcomplaint',
            name='communityboard',
        ),
        migrations.RemoveField(
            model_name='hpdcomplaint',
            name='complaintid',
        ),
        migrations.RemoveField(
            model_name='hpdcomplaint',
            name='housenumber',
        ),
        migrations.RemoveField(
            model_name='hpdcomplaint',
            name='status',
        ),
        migrations.RemoveField(
            model_name='hpdcomplaint',
            name='statusdate',
        ),
        migrations.RemoveField(
            model_name='hpdcomplaint',
            name='statusid',
        ),
        migrations.RemoveField(
            model_name='hpdcomplaint',
            name='streetname',
        ),
        migrations.AddField(
            model_name='hpdcomplaint',
            name='building_id',
            field=models.ForeignKey(blank=True, db_column='buildingid', db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='datasets.HPDBuildingRecord', verbose_name='Unique identifier given to a building record'),
        ),
        migrations.AddField(
            model_name='hpdcomplaint',
            name='community_board',
            field=models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18)], null=True, verbose_name='Unique number identifying a  Community District/Board, which is a political geographical area within a borough of the City of NY'),
        ),
        migrations.AddField(
            model_name='hpdcomplaint',
            name='complaint_anonymous_flag',
            field=models.TextField(choices=[('N', 'No'), ('Y', 'Yes')], null=True, verbose_name='Anonymous complaint Indicator'),
        ),
        migrations.AddField(
            model_name='hpdcomplaint',
            name='complaint_id',
            field=models.IntegerField(blank=True, null=True, verbose_name='Unique identifier of the complaint this problem is associated with'),
        ),
        migrations.AddField(
            model_name='hpdcomplaint',
            name='complaint_status',
            field=models.TextField(choices=[('Close', 'Close'), ('Open', 'Open')], null=True, verbose_name='The status of the complaint'),
        ),
        migrations.AddField(
            model_name='hpdcomplaint',
            name='complaint_status_date',
            field=models.DateField(blank=True, null=True, verbose_name='Date when the complaint status was updated'),
        ),
        migrations.AddField(
            model_name='hpdcomplaint',
            name='house_number',
            field=models.TextField(null=True, verbose_name='Complaint house number'),
        ),
        migrations.AddField(
            model_name='hpdcomplaint',
            name='major_category',
            field=models.TextField(null=True, verbose_name='The major category of the problem'),
        ),
        migrations.AddField(
            model_name='hpdcomplaint',
            name='minor_category',
            field=models.TextField(null=True, verbose_name='The minor category of the problem'),
        ),
        migrations.AddField(
            model_name='hpdcomplaint',
            name='problem_code',
            field=models.TextField(null=True, verbose_name='The problem code'),
        ),
        migrations.AddField(
            model_name='hpdcomplaint',
            name='problem_duplicate_flag',
            field=models.TextField(choices=[('N', 'No'), ('Y', 'Yes')], null=True, verbose_name='Duplicate complaint Indicator'),
        ),
        migrations.AddField(
            model_name='hpdcomplaint',
            name='problem_id',
            field=models.IntegerField(default=1, primary_key=True, serialize=False, verbose_name='Unique identifier of this problem'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='hpdcomplaint',
            name='problem_status',
            field=models.TextField(choices=[('Close', 'Close'), ('Open', 'Open')], null=True, verbose_name='The status of the problem'),
        ),
        migrations.AddField(
            model_name='hpdcomplaint',
            name='problem_status_date',
            field=models.DateField(blank=True, null=True, verbose_name='Date when the problem status was updated'),
        ),
        migrations.AddField(
            model_name='hpdcomplaint',
            name='space_type',
            field=models.TextField(null=True, verbose_name='Type of space where the problem was reported'),
        ),
        migrations.AddField(
            model_name='hpdcomplaint',
            name='status_description',
            field=models.TextField(null=True, verbose_name='Status description'),
        ),
        migrations.AddField(
            model_name='hpdcomplaint',
            name='street_name',
            field=models.TextField(null=True, verbose_name='Complaint street name'),
        ),
        migrations.AddField(
            model_name='hpdcomplaint',
            name='type',
            field=models.TextField(choices=[('Emergency', 'Emergency'), ('Hazardous', 'Hazardous'), ('Immediate Emergency', 'Immediate Emergency'), ('Non emergency', 'Non emergency')], null=True, verbose_name='Code indicating the problem type'),
        ),
        migrations.AddField(
            model_name='hpdcomplaint',
            name='unique_key',
            field=models.IntegerField(blank=True, null=True, verbose_name='Unique identifier of a Service Request (SR) in the open data set'),
        ),
        migrations.AddField(
            model_name='hpdcomplaint',
            name='unit_type',
            field=models.TextField(choices=[('Apartment', 'Apartment'), ('Building', 'Building'), ('Building-Wide', 'Building-Wide'), ('Public area', 'Public area')], null=True, verbose_name='Type of space where the problem was reported'),
        ),
        migrations.AlterField(
            model_name='hpdcomplaint',
            name='apartment',
            field=models.TextField(null=True, verbose_name='Number of the unit or apartment in a building'),
        ),
        migrations.AlterField(
            model_name='hpdcomplaint',
            name='block',
            field=models.TextField(null=True, verbose_name='Number assigned by the NYC Dept of Finance identifying the tax block the lot is on'),
        ),
        migrations.AlterField(
            model_name='hpdcomplaint',
            name='borough',
            field=models.TextField(choices=[('Manhattan', 'Manhattan'), ('Bronx', 'Bronx'), ('Brooklyn', 'Brooklyn'), ('Queens', 'Queens'), ('Staten Island', 'Staten Island')], default='1'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='hpdcomplaint',
            name='lot',
            field=models.TextField(null=True, verbose_name='Unique number assigned by the NYC Dept of Finance within a Block identifying a lot'),
        ),
        migrations.AlterField(
            model_name='hpdcomplaint',
            name='receiveddate',
            field=models.DateField(blank=True, null=True, verbose_name='Date when the complaint was received'),
        ),
        migrations.AlterField(
            model_name='hpdcomplaint',
            name='zip',
            field=models.TextField(null=True, verbose_name='Complaint zip code'),
        ),
     ]
