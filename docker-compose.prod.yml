services:
  app:
    depends_on:
      - redis
      - celerybeat
    env_file:
      - .env
    environment:
      - TZ=America/New_York
  # https://www.digitalocean.com/community/tutorials/how-to-secure-a-containerized-node-js-application-with-nginx-let-s-encrypt-and-docker-compose
  flower:
    image: mher/flower
    container_name: "flower"
    expose:
      - "8888"
    environment:
      - CELERY_BROKER_URL=redis://redis
      - FLOWER_PORT=8888
      - TZ=America/New_York
    networks:
      - network1
      - nginx_network
    depends_on:
      - redis
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    command: sh -c "apk add --no-cache tzdata && cp /usr/share/zoneinfo/America/New_York /etc/localtime && echo 'America/New_York' > /etc/timezone && apk del tzdata"
  nginx:
    restart: always
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"
      - "8888:8888"
    volumes:
      - ./nginx:/app/nginx
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
      - ../anhd-council-client/build_publish:/client
      - ../staging-anhd-council-client/build_publish:/staging-client
      - static_volume:/static
    environment:
      - TZ=America/New_York
    depends_on:
      - app
      - flower
    networks:
      - nginx_network
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
  celery_default:
    restart: always
    build: .
    container_name: "celery_default"
    image: app_image
    networks:
      - network1
    links:
      - redis
    depends_on:
      - redis
      - celerybeat
    volumes:
      - ./:/app
      - ./data:/app/data
      - ./logs:/app/logs
      - ./celery:/app/celery
    env_file:
      - .env
    entrypoint: "celery -A app worker -E -Q celery -l debug -n celery_worker --concurrency=8 --logfile=./celery/logs/default.log"
    environment:
      - TZ=America/New_York
    logging:
      options:
        max-size: "10m"
        max-file: "3"
  celery_update:
    restart: always
    build: .
    container_name: "celery_update"
    image: app_image
    networks:
      - network1
    depends_on:
      - redis
      - celerybeat
    volumes:
      - ./:/app
      - ./data:/app/data
      - ./logs:/app/logs
      - ./celery/logs:/app/celery/logs
    links:
      - redis
    env_file:
      - .env
    environment:
      - TZ=America/New_York
    entrypoint: "celery -A app worker -E -Q update -l debug -n update_worker --concurrency=8 --logfile=./celery/logs/update.log"
    logging:
      options:
        max-size: "10m"
        max-file: "3"
  celerybeat:
    restart: always
    build: .
    container_name: "celerybeat"
    image: app_image
    entrypoint: "celery -A app beat -l debug --scheduler django_celery_beat.schedulers:DatabaseScheduler --logfile=./celery/logs/beat.log"
    networks:
      - network1
    depends_on:
      - redis
    links:
      - redis
    environment:
      - TZ=America/New_York
    volumes:
      - ./:/app
      - ./celery:/app/celery
    env_file:
      - .env
    # https://www.distributedpython.com/2018/10/13/flower-docker/
    logging:
      options:
        max-size: "10m"
        max-file: "3"
  certbot:
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    environment:
      - TZ=America/New_York
    command: sh -c "apk add --no-cache tzdata && cp /usr/share/zoneinfo/America/New_York /etc/localtime && echo 'America/New_York' > /etc/timezone && apk del tzdata"
