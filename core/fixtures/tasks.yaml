- model: django_celery_beat.periodictask
  fields:
    name: "Sanity check"
    description: "Runs every minute to sanity check beat/django integration"
    task: "app.tasks.sanity_check"
    crontab: 1
    args: "[]"
    kwargs: "{}"
    date_changed: "2019-04-25"
- model: django_celery_beat.periodictask
  fields:
    name: "Check and Update HPDViolation"
    description: "Checks api for HPD Violation update and updates."
    task: "core.tasks.async_check_api_for_update_and_update"
    crontab: 10 # every 7pm
    args: "[21]"
    kwargs: "{}"
    date_changed: "2019-04-25"
- model: django_celery_beat.periodictask
  fields:
    name: "Check and Update DOBViolation"
    description: "Checks api for DOBViolation update and updates."
    task: "core.tasks.async_check_api_for_update_and_update"
    crontab: 10 # every 7pm
    args: "[12]"
    kwargs: "{}"
    date_changed: "2019-04-25"
- model: django_celery_beat.periodictask
  fields:
    name: "Check and Update ECBViolation"
    description: "Checks api for ECBViolation update and updates."
    task: "core.tasks.async_check_api_for_update_and_update"
    crontab: 10 # every 7pm
    args: "[13]"
    kwargs: "{}"
    date_changed: "2019-04-25"
- model: django_celery_beat.periodictask
  fields:
    name: "Check and Update HPDComplaints & Problems"
    description: "Checks api for HPDComplaint & Problems update and updates."
    task: "core.tasks.async_check_api_for_update_and_update"
    crontab: 11 # every 8pm
    args: "[17]"
    kwargs: "{}"
    date_changed: "2022-04-25"
- model: django_celery_beat.periodictask
  fields:
    name: "Check and Update HPDRegistration"
    description: "Checks api for HPDRegistration update and updates."
    task: "core.tasks.async_check_api_for_update_and_update"
    crontab: 11 # every 8pm
    args: "[20]"
    kwargs: "{}"
    date_changed: "2019-04-25"
- model: django_celery_beat.periodictask
  fields:
    name: "Check and Update HPDContact"
    description: "Checks api for HPDContact update and updates."
    task: "core.tasks.async_check_api_for_update_and_update"
    crontab: 11 # every 8pm
    args: "[19]"
    kwargs: "{}"
    date_changed: "2019-04-25"
- model: django_celery_beat.periodictask
  fields:
    name: "Check and Update Eviction"
    description: "Checks api for Eviction update and updates."
    task: "core.tasks.async_check_api_for_update_and_update"
    crontab: 11 # every 8pm
    args: "[14]"
    kwargs: "{}"
    date_changed: "2019-04-25"
- model: django_celery_beat.periodictask
  fields:
    name: "Check and Update Properties/Pluto"
    description: "Checks api for Properties/PLUTO update and updates."
    task: "core.tasks.async_check_api_for_update_and_update"
    crontab: 21 # once a month on the 6th
    args: "[2]"
    kwargs: "{}"
- model: django_celery_beat.periodictask
  fields:
    name: "Check and Update HousingLitigations"
    description: "Checks api for HousingLitigations update and updates."
    task: "core.tasks.async_check_api_for_update_and_update"
    crontab: 12 # every 9pm
    args: "[15]"
    kwargs: "{}"
    date_changed: "2019-04-25"
- model: django_celery_beat.periodictask
  fields:
    name: "Check and Update DOBLegacyFiledPermit"
    description: "Checks api for DOBLegacyFiledPermit update and updates."
    task: "core.tasks.async_check_api_for_update_and_update"
    crontab: 12 # every 9pm
    args: "[9]"
    kwargs: "{}"
    date_changed: "2019-04-25"
- model: django_celery_beat.periodictask
  fields:
    name: "Check and Update DOBNowFiledPermit"
    description: "Checks api for DOBNowFiledPermit update and updates."
    task: "core.tasks.async_check_api_for_update_and_update"
    crontab: 12 # every 9pm
    args: "[34]"
    kwargs: "{}"
    date_changed: "2019-04-25"
- model: django_celery_beat.periodictask
  fields:
    name: "Check and Update DOBLegacyIssuedPermit"
    description: "Checks api for DOBLegacyIssuedPermit update and updates."
    task: "core.tasks.async_check_api_for_update_and_update"
    crontab: 13 # every 10pm
    args: "[10]"
    kwargs: "{}"
    date_changed: "2019-04-25"
- model: django_celery_beat.periodictask
  fields:
    name: "Check and Update DOBNowIssuedPermit"
    description: "Checks api for DOBNowIssuedPermit update and updates."
    task: "core.tasks.async_check_api_for_update_and_update"
    crontab: 13 # every 10pm
    args: "[11]"
    kwargs: "{}"
    date_changed: "2019-04-25"
- model: django_celery_beat.periodictask
  fields:
    name: "Check and Update DOBFiledPermit"
    description: "Checks api for DOBFiledPermit update and updates."
    task: "core.tasks.async_check_api_for_update_and_update"
    crontab: 14 # every 11pm
    args: "[35]"
    kwargs: "{}"
    date_changed: "2019-04-25"
- model: django_celery_beat.periodictask
  fields:
    name: "Check and Update DOBIssuedPermit"
    description: "Checks api for DOBIssuedPermit update and updates."
    task: "core.tasks.async_check_api_for_update_and_update"
    crontab: 14 # every 10pm
    args: "[26]"
    kwargs: "{}"
    date_changed: "2019-04-25"
- model: django_celery_beat.periodictask
  fields:
    name: "Check and Update DOBComplaint"
    description: "Checks api for DOBComplaint update and updates."
    task: "core.tasks.async_check_api_for_update_and_update"
    crontab: 13 # every 10pm
    args: "[8]"
    kwargs: "{}"
    date_changed: "2019-04-25"
- model: django_celery_beat.periodictask
  fields:
    name: "Check and Update CONHRecord"
    description: "Checks api for CONHRecord update and updates."
    task: "core.tasks.async_check_api_for_update_and_update"
    crontab: 13 # every 10pm
    args: "[33]"
    kwargs: "{}"
    date_changed: "2019-04-25"
- model: django_celery_beat.periodictask
  fields:
    name: "Check and Update Acris"
    description: "Checks api for Acris for updates and update one at a time each day."
    task: "core.tasks.async_check_acris_for_update_and_update"
    crontab: 5 # every 3am
    args: "[]"
    kwargs: "{}"
    date_changed: "2019-04-25"
- model: django_celery_beat.periodictask
  fields:
    name: "Clean temp directory"
    description: "Maintainence task."
    task: "app.tasks.clean_temp_directory"
    crontab: 28 # 5am sunday
    args: "[]"
    kwargs: "{}"
    date_changed: "2019-04-25"
- model: django_celery_beat.periodictask
  fields:
    name: "Reset cache at 7am"
    description: "Maintainence task."
    task: "app.tasks.reset_cache"
    crontab: 9 # every 7 am
    args: "[]" # add token to args in admin
    kwargs: "{}"
    date_changed: "2019-04-25"
- model: django_celery_beat.periodictask
  fields:
    name: "2nd cache pass"
    description: "Maintainence task."
    task: "app.tasks.recache"
    crontab: 4 # every 2 am
    args: "[]" # add token to args in admin
    kwargs: "{}"
    date_changed: "2019-04-25"
- model: django_celery_beat.periodictask
  fields:
    name: "Vacuum DB Sunday"
    description: "Maintainence task. 5am every sunday morning"
    task: "app.tasks.clean_database"
    crontab: 28 # 5 am sunday
    args: "[]"
    kwargs: "{}"
    date_changed: "2019-04-25"
- model: django_celery_beat.periodictask
  fields:
    name: "Ensure update task results"
    description: "Maintainence task. 12pm every day"
    task: "app.tasks.async_ensure_update_task_results"
    crontab: 26
    args: "[]"
    kwargs: "{}"
    date_changed: "2019-04-25"
- model: django_celery_beat.periodictask
  fields:
    name: "Recount Property Annotations"
    description: "Maintainence task. midnight every day"
    task: "app.tasks.async_annotate_properties_with_all_datasets"
    crontab: 7 # do 5am because if the annotations run before ACRIS finishes, you'll get incomplete data on custom search
    args: "[]"
    kwargs: "{}"
    date_changed: "2019-04-25"
- model: django_celery_beat.periodictask
  fields:
    name: "Check Gmail for PropertyShark daily"
    description: "Data task, 9pm"
    task: "core.tasks.get_gmail_property_shark_links"
    crontab: 12
    args: "[]"
    kwargs: "{}"
    date_changed: "2019-08-16"
- model: django_celery_beat.periodictask
  fields:
    name: "Check and Update AEPBuilding"
    description: "Checks api for AEPBuilding update and updates."
    task: "core.tasks.async_check_api_for_update_and_update"
    crontab: 13 # every 10pm
    args: "[43]"
    kwargs: "{}"
    date_changed: "2020-04-25"
- model: django_celery_beat.periodictask
  fields:
    name: "Check and Update HPDBuildingRecord"
    description: "Checks api for HPDBuildingRecord update and updates."
    task: "core.tasks.async_check_api_for_update_and_update"
    crontab: 12 # every 9pm
    args: "[16]"
    kwargs: "{}"
    date_changed: "2020-04-25"
